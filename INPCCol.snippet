<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets
    xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>INotifyPropertyChanged Collection</Title>
			<Author>Jorge Cupi</Author>
			<Description>Implements an Observable Collection that supports INotifyPropertyChanged</Description>
			<Shortcut>propcol</Shortcut>
        </Header>
        <Snippet>
            <Declarations>
                <Literal>
                    <ID>myVar</ID>
                    <ToolTip>Replace the private variable.</ToolTip>
                    <Default>myVar</Default>
                </Literal>
                <Literal>
                    <ID>myProp</ID>
                    <ToolTip>Replace the public property.</ToolTip>
                    <Default>myProp</Default>
                </Literal>
                <Literal>
                    <ID>type</ID>
                    <ToolTip>Replace the variable type.</ToolTip>
                    <Default>string</Default>
                </Literal>
            </Declarations>
            <Code Language="CSharp">
                <![CDATA[private ObservableCollection<$type$> _$myVar$;
                public ObservableCollection<$type$> $myProp$
                {
                    get { return _$myVar$; }
                    set
                    {
                        _$myVar$ = value;
                        OnPropertyChanged("$myProp$");
                    }
                }
                
                private void $myProp$_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
                {
                    OnPropertyChanged("$myProp$");
                }

                //ToDo:
                //Insert this on your constructor:
                $myProp$ = new ObservableCollection<$type$>();
                $myProp$.CollectionChanged += $myProp$_CollectionChanged;
				]]>
            </Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>